cmake_minimum_required(VERSION 2.6)
PROJECT (UBC)

SET(CMAKE_MODULE_PATH "${UBC_SOURCE_DIR}/cmake")

IF (WIN32)
ELSEIF (APPLE)
ELSE (APPLE)
    INCLUDE (UsePkgConfig)
    INCLUDE (FindENet)

    MACRO (PK _PKGNAME _INCLUDEDIR _LIBDIR _LIBS)
        PKGCONFIG(${_PKGNAME} _INCLUDE_DIR _LIB_DIR _LIB_FLAGS _CXX_FLAGS)
#        PKG_CHECK_MODULES(${_PKGNAME} _INCLUDE_DIR _LIB_DIR _LIB_FLAGS _CXX_FLAGS)
	STRING(REGEX REPLACE "-I" "" ${_INCLUDEDIR} ${_CXX_FLAGS})
        SET(${_LIBDIR} ${_LIB_DIR})
        STRING(REGEX REPLACE "^-L[a-zA-Z/]* " "" ${_LIBS} ${_LIB_FLAGS})
        STRING(REGEX REPLACE "-l" "" _LIBS ${_LIBS})
        SEPARATE_ARGUMENTS(${_INCLUDEDIR})
        SEPARATE_ARGUMENTS(${_LIBS})
    ENDMACRO (PK _INCLUDEDIR _LIBDIR _LIBS)
    FIND_PACKAGE(enet REQUIRED)
    PK (OGRE OGRE_INCLUDEDIR OGRE_LIBDIR OGRE_LIBS)
    PK (OIS OIS_INCLUDEDIR OIS_LIBDIR OIS_LIBS)
#        PK (MYGUI MyGUI_INCLUDEDIR MyGUI_LIBDIR MyGUI_LIBS)
    PK (OgreBullet OGREBULLET_INCLUDEDIR OGREBULLET_LIBDIR OGREBULLET_LIBS)
    PK (bullet BULLET_INCLUDEDIR BULLET_LIBDIR BULLET_LIBS)
#    PK (OgreAL OGREAL_INCLUDEDIR OGREAL_LIBDIR OGREAL_LIBS)
    FIND_LIBRARY(ENET_LIB enet)
    IF (ENET_LIB MATCHES "ENET_LIB-NOTFOUND")
	    MESSAGE("Enet library not found!")
	ENDIF (ENET_LIB MATCHES "ENET_LIB-NOTFOUND")	
ENDIF (WIN32)
    SET (UBC_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
    SET (UBC_INCLUDE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include)
    SET (UBC_SRCS ${UBC_SRC_DIR}/basketballs.cpp ${UBC_SRC_DIR}/courtdata.cpp ${UBC_SRC_DIR}/courtstate.cpp ${UBC_SRC_DIR}/defense.cpp ${UBC_SRC_DIR}/games.cpp ${UBC_SRC_DIR}/gamestate.cpp ${UBC_SRC_DIR}/gui.cpp ${UBC_SRC_DIR}/input.cpp ${UBC_SRC_DIR}/load.cpp ${UBC_SRC_DIR}/network.cpp ${UBC_SRC_DIR}/offense.cpp ${UBC_SRC_DIR}/physics.cpp ${UBC_SRC_DIR}/playerdata.cpp ${UBC_SRC_DIR}/players.cpp ${UBC_SRC_DIR}/playerstate.cpp ${UBC_SRC_DIR}/rendersystems.cpp ${UBC_SRC_DIR}/sound.cpp ${UBC_SRC_DIR}/teamdata.cpp ${UBC_SRC_DIR}/teams.cpp ${UBC_SRC_DIR}/teamstate.cpp ${UBC_SRC_DIR}/ubcapp.cpp)
    SET (CLIENT_SRCS ${UBC_SRC_DIR}/client.cpp)
    SET (SERVER_SRCS ${UBC_SRC_DIR}/server.cpp)
    SET (UBC_DATA_DIR ${CMAKE_CURRENT_SOURCE_DIR}/data)
    ADD_SUBDIRECTORY (include)
    ADD_SUBDIRECTORY (src)

IF (CMAKE_BUILD_TYPE MATCHES "Debug")
    ADD_SUBDIRECTORY (debug)
ELSEIF (CMAKE_BUILD_TYPE MATCHES "Release")
    ADD_SUBDIRECTORY (release)
ENDIF (CMAKE_BUILD_TYPE MATCHES "Debug")


